<?xml version="1.0" encoding="UTF-8"?>
<!-- 主要是自动扫描控制器，视图模式，注解的启动这三个 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描该包，实现支持注解的IOC，使SpringMVC认为包下用了@Controller注解的类是控制器。 -->
	<context:component-scan base-package="cn.footballtime.web" />

	<!-- 如果加了下边的静态资源配置则必须加这句，加这句才可以正确拦截jsp页面。支持mvc注解驱动 -->
	<mvc:annotation-driven/>
	<!-- 加了之后就可以访问这些静态资源了 -->
	<mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/images/**" location="/images/" />
    <mvc:resources mapping="/js/**" location="/js/" />
	
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<!--<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">--><!--org.springframework.http.converter.json.MappingJacksonHttpMessageConverter-->
	<bean id="mappingJacksonHttpMessageConverter"
		  class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	<!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!-- 内部视图解析器，JSP与JSTL模板 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!--指定视图渲染类 -->
		<property name="viewClass"
				  value="org.springframework.web.servlet.view.JstlView" />
		<!--自动添加到路径中的前缀 -->
		<property name="prefix" value="/WEB-INF/views/jstl" />
		<!--自动添加到路径中的后缀 -->
		<property name="suffix" value=".jsp" />
		<!--设置所有视图的内容类型，如果视图本身设置内容类型视图类可以忽略 -->
		<property name="contentType" value="text/html;charset=UTF-8" />
		<!-- 优先级，越小越前 -->
		<property name="order" value="2" />
	</bean>

	<!-- 配置freeMarker视图解析器 -->
	<bean id="viewResolverFtl" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<!--是否启用缓存 -->
		<property name="cache" value="true" />
		<!--自动添加到路径中的前缀 -->
		<property name="prefix" value="" />
		<!--自动添加到路径中的后缀 -->
		<property name="suffix" value=".html" />
		<!--指定视图渲染类 -->
		<property name="viewClass"
				  value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<!-- 设置是否暴露Spring的macro辅助类库，默认为true -->
		<property name="exposeSpringMacroHelpers" value="true" />
		<!-- 是否应将所有request属性添加到与模板合并之前的模型。默认为false。 -->
		<property name="exposeRequestAttributes" value="true" />
		<!-- 是否应将所有session属性添加到与模板合并之前的模型。默认为false。 -->
		<property name="exposeSessionAttributes" value="true" />
		<!-- 在页面中使用${rc.contextPath}就可获得contextPath -->
		<property name="requestContextAttribute" value="rc" />
		<!--设置所有视图的内容类型，如果视图本身设置内容类型视图类可以忽略 -->
		<property name="contentType" value="text/html;charset=UTF-8" />
		<!-- 优先级，越小越前 -->
		<property name="order" value="1" />
	</bean>
	<!-- 配置freeMarker的模板路径 -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<!-- 模板路径 -->
		<property name="templateLoaderPath" value="/WEB-INF/views/ftl" />
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="freemarkerSettings">
			<props>
				<!-- 刷新模板的周期，单位为秒 -->
				<prop key="template_update_delay">5</prop>
				<!--模板的编码格式 -->
				<prop key="defaultEncoding">UTF-8</prop>
				<!--url编码格式 -->
				<prop key="url_escaping_charset">UTF-8</prop>
				<!--此属性可以防止模板解析空值时的错误 -->
				<prop key="classic_compatible">true</prop>
				<!--该模板所使用的国际化语言环境选项 -->
				<prop key="locale">zh_CN</prop>
				<!--布尔值格式 -->
				<prop key="boolean_format">true,false</prop>
				<!--日期时间格式 -->
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<!--时间格式 -->
				<prop key="time_format">HH:mm:ss</prop>
				<!--数字格式 -->
				<prop key="number_format">0.######</prop>
				<!--自动开启/关闭空白移除，默认为true -->
				<prop key="whitespace_stripping">true</prop>
			</props>
		</property>
	</bean>
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>
</beans>